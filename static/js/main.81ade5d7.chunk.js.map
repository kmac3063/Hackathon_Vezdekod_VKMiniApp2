{"version":3,"sources":["panels/Home.js","img/persik.png","panels/WelcomeScreen.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","scheme","useState","bitsSize","Array","from","length","v","i","bitsInSecond","setEnable","currentSecond","setCurrentSecond","myInterval","setMyInterval","stopPressed","clearInterval","console","log","bridge","send","style","display","size","stretched","marginRight","onClick","bits","sec","timerId","setInterval","startPressed","mode","justifyContent","map","bool","index","padding","backgroundColor","i1","i2","onChange","e","value","switchChange","target","WelcomeScreen","icon","header","action","data-to","App","activePanel","setActivePanel","setUser","popout","setPopout","setScheme","useEffect","a","user","then","p","is_available","alert","subscribe","detail","type","data","schemeAttribute","document","createAttribute","body","attributes","setNamedItem","fetchData","checkAvailable","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.81ade5d7.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    Panel,\n    PanelHeader,\n    Header,\n    Button,\n    Group,\n    Cell,\n    Div,\n    Avatar,\n    SimpleCell,\n    Switch,\n    FormItem, Select\n} from '@vkontakte/vkui';\nimport bridge from \"@vkontakte/vk-bridge\";\n\nconst Home = ({id, go, fetchedUser, scheme}) => {\n    const START_SIZE = 8\n\n    const [bitsSize, setBitsSize] = useState(START_SIZE)\n    const [bitsInSecond, setBitsInSecond] = useState(Array.from({length: bitsSize}, (v, i) => 0))\n    const [enable, setEnable] = useState(false)\n    const [currentSecond, setCurrentSecond] = useState(0)\n    const [myInterval, setMyInterval] = useState(null)\n\n    const getString = (index) => {\n        let i = index + 1\n        if (i % 10 === 3) {\n            return i + \"-я секунда\"\n        }\n        return i + \"-ая секунда\"\n    }\n\n    const getSecondOptions = () => {\n        let res = []\n        for (let i = 1; i <= 60; i++) {\n            res.push({value: (i - 1), label: i + \" сек.\"})\n        }\n        return res\n    }\n\n    const switchChange = (index, value) => {\n        setEnable(false)\n        stopPressed()\n        bitsInSecond[index] = bitsInSecond[index] ^ 1\n    }\n\n    const startPressed = (bits) => {\n        if (myInterval !== null) {\n            clearInterval(myInterval)\n        }\n        let sec = 0\n        bridge.send(\"VKWebAppFlashSetLevel\", {\"level\": bits[0]});\n        setCurrentSecond(1)\n        console.log(bits[0])\n        let timerId = setInterval(() => {\n            sec = (sec + 1) % (bitsSize)\n            bridge.send(\"VKWebAppFlashSetLevel\", {\"level\": bits[sec]});\n            setCurrentSecond(sec + 1)\n            console.log(bits[sec])\n        }, 1000);\n        setMyInterval(timerId)\n    }\n\n    const stopPressed = () => {\n        clearInterval(myInterval)\n        setCurrentSecond(0)\n        console.log(\"Stop!\")\n        bridge.send(\"VKWebAppFlashSetLevel\", {\"level\": 0});\n    }\n\n    const getColor = (i1, i2) => {\n        if (i1 === i2) return \"#D7FDDB\"\n        return \"#FFFFFF\"\n    }\n\n    return <Panel id={id}>\n        <PanelHeader>Один-ноль фонарик</PanelHeader>\n        <Group>\n            {/*<FormItem top=\"Количество секунд\">*/}\n            {/*    <Select*/}\n            {/*        placeholder=\"Выбрать\"*/}\n            {/*        options={getSecondOptions()}*/}\n            {/*        value={bitsSize - 1}*/}\n            {/*        onChange={(e) => {*/}\n            {/*            setBitsSize(parseInt(e.target.value) + 1)*/}\n            {/*            setBitsInSecond(Array.from({length: parseInt(e.target.value) + 1}, (v, i) => 0))*/}\n            {/*            stopPressed()*/}\n            {/*            setEnable(false)*/}\n            {/*        }}*/}\n            {/*    />*/}\n            {/*</FormItem>*/}\n            <Div style={{display: 'flex'}}>\n                <Button size=\"l\" stretched style={{marginRight: 8}} onClick={\n                    () => {startPressed(bitsInSecond)}}>Начать</Button>\n                <Button size=\"l\" stretched mode=\"secondary\" onClick={stopPressed}>Остановить</Button>\n            </Div>\n        </Group>\n        <Group>\n            <Header mode=\"secondary\">Управление секундами</Header>\n            <Div style={{display: \"flex\", justifyContent:\"space-between\"}}>\n                {bitsInSecond.map((bool, index) => {\n                    return <Div key={index}\n                                style={{padding:\"0\", backgroundColor: getColor(index + 1, currentSecond)}}>\n                        <Div style={{padding:\"0\"}}>{index + 1} сек</Div>\n                        <Switch onChange={(e) => {switchChange(index, e.target.value); }}/>\n                    </Div>\n                })\n                }\n            </Div>\n        </Group>\n    </Panel>\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from \"react\";\r\nimport {Button, Group, Panel, PanelHeader, PanelHeaderBack, Placeholder} from \"@vkontakte/vkui\";\r\nimport persik from \"../img/persik.png\";\r\nimport {Icon56UsersOutline} from \"@vkontakte/icons\";\r\n\r\nconst WelcomeScreen = ({id, fetchedUser, go}) => {\r\n    const getName = (user) => {\r\n        // if (user == null || user.first_name == null)\r\n        //     return \"Друже\"\r\n        // return fetchedUser.first_name\r\n        return \"Приятель\"\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            {/*<PanelHeader right={<Avatar size={36} />}>Panel 1</PanelHeader>*/}\r\n            <Group>\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline />}\r\n                    header={\"Приветствуем, \" + getName(fetchedUser) + \"!\"}\r\n                    action={<Button size=\"m\" onClick={go} data-to=\"Home\">Перейти к фонарику</Button>}\r\n                >\r\n                    Приложение разработано в рамках хакатона \"Вездекод 2021\"\r\n                </Placeholder>\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default WelcomeScreen;","import React, {useState, useEffect} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {View, ScreenSpinner, AdaptivityProvider, AppRoot} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport WelcomeScreen from \"./panels/WelcomeScreen\";\n\nconst App = () => {\n    const [activePanel, setActivePanel] = useState('WelcomeScreen');\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n    const [scheme, setScheme] = useState(null)\n\n    // const schemeAttribute = document.createAttribute('scheme');\n    // schemeAttribute.value = 'dark';\n    // document.body.attributes.setNamedItem(schemeAttribute);\n\n    useEffect(() => {\n        bridge.subscribe(({detail: {type, data}}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme')\n                // schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                schemeAttribute.value = 'client_light';\n                setScheme(schemeAttribute.value)\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n        });\n\n        async function fetchData() {\n            setPopout(null);\n            const user = await bridge.send('VKWebAppGetUserInfo');\n            setUser(user);\n        }\n\n        async function checkAvailable() {\n            bridge.send(\"VKWebAppFlashGetInfo\").then(\n                (p) => {\n                    if (!p.is_available) {\n                        alert(\"На вашем устройстве отсутствует/не работает фонарик :(\")\n                    }\n                }\n            )\n        }\n\n\n\n        fetchData();\n        checkAvailable()\n    }, []);\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    };\n\n    return (\n        <AdaptivityProvider>\n            <AppRoot>\n                <View activePanel={activePanel} popout={popout}>\n                    <WelcomeScreen id='WelcomeScreen' fetchedUser={fetchedUser} go={go}/>\n                    <Home id='Home' fetchedUser={fetchedUser} go={go} scheme={scheme}/>\n                </View>\n            </AppRoot>\n        </AdaptivityProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}